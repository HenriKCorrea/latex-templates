name: Create Release

on:
  push:
    tags:
      - "v*.*.*" # Matches v1.0.0, v2.1.3, etc.
      - "v*.*.*-*" # Matches v1.0.0-alpha, v1.0.0-beta.1, etc.

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases and uploading assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Archive texmf templates
        run: |
          tar -czf texmf-${{ github.ref_name }}.tar.gz -C texmf .
          (cd texmf && zip -r ../texmf-${{ github.ref_name }}.zip .)

      # Generate image metadata (name, tags, labels) based on the contents of the repository
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: | 
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-{{pre}}
            type=sha

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Remove leading v from tag
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Create draft release with artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" \
            texmf-${{ github.ref_name }}.tar.gz \
            texmf-${{ github.ref_name }}.zip \
            --draft \
            --title "${{ github.ref_name }}" \
            --notes "## Release notes
            
            Fill in details here.
            
            ### DockerHub Image
            https://hub.docker.com/layers/${{ vars.DOCKER_USERNAME }}/${{  github.event.repository.name }}/${{ steps.version.outputs.version }}"
